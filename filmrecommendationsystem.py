# -*- coding: utf-8 -*-
"""FilmRecommendationSystem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r5kQPR2GWsRsYCWPbaA0Era7ShPotbA0
"""

# Basic Film Recommendation System tool
# I took the movie_metadata.csv dataset from: https://gist.github.com/vinicius-msouza/f37c8951497ffb17bea87fc423778e4b
# I took both the movies.csv dataset and the the ml-ratings-100k-sample.csv dataset from https://grouplens.org/datasets/movielens/



import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

DATASET_PATH = 'movie_metadata.csv'
MOVIE_LENS_PATH = 'movies.csv'
RATINGS_PATH = 'ratings.csv'

def recommend_movie(title):
  pd.set_option('display.max_columns', 100)
  df = pd.read_csv(DATASET_PATH)
  print("### Loading dataset...")
  df = df[['director_name', 'actor_1_name', 'actor_2_name', 'actor_3_name',
         'plot_keywords', 'genres', 'movie_title']]
  if not df['actor_1_name'].empty or not['actor_2_name'].empty or not df['actor_3_name'].empty:
    df['actors'] = df['actor_1_name'] + "," + df['actor_2_name'] + "," + df['actor_3_name']
  df = df[['director_name', 'plot_keywords', 'genres', 'movie_title', 'actors']]

  df.where((pd.notnull(df)), 'REMOVE')
  df.replace(["NaN"], np.nan, inplace = True)
  df = df.dropna()
  for index, row in df.iterrows():
    # process titles
    app = row['movie_title'].strip()
    row['movie_title'] = app

    # process actors' names
    app = row['actors'].lower().replace(' ', '')
    app = app.replace(',', ' ')
    row['actors'] = app

    # process director's name
    app = row['director_name'].lower().replace(' ', '')
    row['director_name'] = app

    #process genres
    app = row['genres'].lower().replace('|', '')
    row['genres'] = app

    # process plot_keywords
    app = row['plot_keywords'].lower().replace(' ', '')
    row['plot_keywords'] = app

  df.set_index('movie_title', inplace = True)
  df['bag_of_words'] = ''
  columns = df.columns
  for index, row in df.iterrows():
    words = ''
    for col in columns:
      words = words + row[col] + ' '
    row['bag_of_words'] = words

  df.drop(columns=[col for col in df.columns if col != 'bag_of_words, inplace = True'])

  count = CountVectorizer()
  count_matrix = count.fit_transform(df['bag_of_words'])

  cosine_sim = cosine_similarity(count_matrix, count_matrix)

  indices = pd.Series(df.index)

  recommended_movies = []

  idx = -1

  # getting the index of the movie that matches the title

  for i in range(0, indices.size):
    if indices[i] == title or indices[i] in title:
      idx = i
      break
  score_series = pd.Series(cosine_sim[idx]).sort_values(ascending = False)

  top_10_indexes = list(score_series.iloc[1:11].index)

  for i in top_10_indexes:
    recommended_movies.append(list(df.index)[i])

  return recommended_movies

print(recommend_movie('Mercy Streets'))

